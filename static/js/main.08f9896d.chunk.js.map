{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["FT_MINIMUM_STORAGE_BALANCE","parseNearAmount","nearApi","format","contractId","wNearContractId","config","network","networkId","nodeUrl","walletUrl","helperUrl","explorerUrl","App","useState","access","setAccess","accountId","setAccountId","theLastOne","setTheLastOne","useEffect","window","near","setTimeout","on","res","console","log","newAccountId","rpc","signin","a","requestSignIn","methodNames","error","accessKey","signOut","disconnect","sayHi","secretKey","getAccountId","keyStore","InMemoryKeyStore","keyPair","fromString","setKey","Object","assign","deps","account","contract","Contract","viewMethods","changeMethods","getTheLastOne","viewFunction","sendNear","sendMoney","receiverId","amount","hackForWrap","actions","total","unshift","methodName","args","registration_only","deposit","SwapToWNear","signAndSendTransaction","sendWNear","receiver_id","swapAndSendWNearWithActions","transaction","swapAndSendWNearWithTransactions","transactions","requestSignTransactions","className","slice","style","marginTop","onClick","marginLeft","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08f9896d.chunk.js","sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\r\nimport * as nearApi from 'near-api-js';\r\n\r\nimport './App.css';\r\nimport { Contract } from 'near-api-js';\r\n\r\nconst {\r\n  utils: {\r\n    format: {\r\n      parseNearAmount,\r\n    },\r\n  },\r\n} = nearApi;\r\n\r\n// account creation costs 0.00125 NEAR for storage, 0.00000000003 NEAR for gas\r\n// https://docs.near.org/docs/api/naj-cookbook#wrap-and-unwrap-near\r\nconst FT_MINIMUM_STORAGE_BALANCE = parseNearAmount('0.00125');\r\n\r\nconst contractId = 'dev-1635836502908-29682237937904';\r\n// const contractId = 'v2.ref-farming.near';\r\nconst wNearContractId = 'wrap.testnet';\r\nconst config = {\r\n  network: 'testnet',\r\n  networkId: 'testnet',\r\n  nodeUrl: \"https://rpc.testnet.near.org\",\r\n  walletUrl: \"https://wallet.testnet.near.org\",\r\n  helperUrl: \"https://helper.testnet.near.org\",\r\n  explorerUrl: \"https://explorer.testnet.near.org\",\r\n}\r\n\r\nconst App = () => {\r\n  const [access, setAccess] = useState({});\r\n  const [accountId, setAccountId] = useState('');\r\n  const [theLastOne, setTheLastOne] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (window.near) {\r\n      setTimeout(() => {\r\n        window.near.on('signIn', (res) => {\r\n          console.log('signIn res: ', res)\r\n        });\r\n  \r\n        window.near.on('signOut', (res) => {\r\n          console.log('signOut res: ', res)\r\n        });\r\n        \r\n        window.near.on('accountChanged', (newAccountId) => {\r\n          console.log('newAccountId: ', newAccountId);\r\n        });\r\n        \r\n        window.near.on('rpcChanged', (rpc) => {\r\n          console.log('rpc: ', rpc);\r\n        });\r\n      }, 1000)\r\n    }\r\n  }, [window && window.near])\r\n\r\n  const signin = async () => {\r\n    try {\r\n      // The method names on the contract that should be allowed to be called. Pass null for no method names and '' or [] for any method names.\r\n      // const res = await window.near.requestSignIn({ contractId, methodNames: ['sayHi', 'ad'] })\r\n      // const res = await window.near.requestSignIn({ contractId, methodNames: null })\r\n      const res = await window.near.requestSignIn({ contractId, methodNames: [] })\r\n      // const res = await window.near.requestSignIn({ contractId, amount: '10000000000000000000000' })\r\n      console.log('signin res: ', res);\r\n      if (!res.error) {\r\n        if (res && res.accessKey) {\r\n          setAccess(res.accessKey);\r\n          setAccountId(window.near.accountId)\r\n        } else {\r\n          console.log('res: ', res)\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log('error: ', error)\r\n    }\r\n  }\r\n\r\n  const signOut = async () => {\r\n    const res = await window.near.disconnect();\r\n    console.log('signout res: ', res);\r\n    setAccess({})\r\n    setAccountId('')\r\n  }\r\n\r\n  const sayHi = async () => {\r\n    try {\r\n      if (access.secretKey) {\r\n        const accountId = window.near.getAccountId();\r\n        const keyStore = new nearApi.keyStores.InMemoryKeyStore();\r\n        const keyPair = nearApi.KeyPair.fromString(access.secretKey);\r\n        await keyStore.setKey('testnet', accountId, keyPair);\r\n        const near = await nearApi.connect(Object.assign({ deps: { keyStore } }, config));\r\n        const account = await near.account(accountId);\r\n        const contract = new Contract(account, contractId, {\r\n          viewMethods: ['whoSaidHi'],\r\n          changeMethods: ['sayHi'],\r\n        });\r\n  \r\n        const res = await contract.sayHi();\r\n        console.log('Say Hi response: ', res);\r\n      } else {\r\n        console.log('please await access to set');\r\n      } \r\n    } catch (error) {\r\n      console.log('sayHi error: ', error);\r\n    }\r\n  }\r\n\r\n  const getTheLastOne = async () => {\r\n    const res = await window.near.account().viewFunction(contractId, 'whoSaidHi')\r\n\r\n    console.log('Who Saied Hi response: ', res);\r\n    setTheLastOne(res);\r\n  }\r\n\r\n  const sendNear = async () => {\r\n    const res = await window.near.sendMoney({\r\n      receiverId: 'amazingbeerbelly-2.testnet',\r\n      amount: '100000000000000000000000',\r\n    });\r\n    console.log('send near response: ', res);\r\n  }\r\n\r\n  // Note: this function exists because at the time of this writing, the wrap.testnet smart contract\r\n  // doesn't have the latest version of the w-near contract.\r\n  // It doesn't abide by the Storage Management standard here: https://nomicon.io/Standards/StorageManagement\r\n  // This is the smart contract that needs to be deployed over it:\r\n  // https://github.com/near/core-contracts/tree/5f4b7638d4f446eeb089e261dc80c4dcaf69dd48/w-near\r\n  const hackForWrap = async (actions) => {\r\n    const res = await window.near.account().viewFunction(\r\n      wNearContractId,\r\n      'storage_balance_of',\r\n      { \"account_id\": window.near.accountId },\r\n    )\r\n    if (!res.error) {\r\n      console.log('res: ', res);\r\n      if (res.total !== FT_MINIMUM_STORAGE_BALANCE) {\r\n        actions.unshift({\r\n          methodName: 'storage_deposit',\r\n          args: {\r\n            registration_only: true\r\n          },\r\n          deposit: '1250000000000000000000'\r\n        })\r\n      }\r\n    }\r\n    return actions\r\n  }\r\n\r\n  const SwapToWNear = async () => {\r\n    let actions = [\r\n        {\r\n          methodName: 'near_deposit',\r\n          args: {},\r\n          deposit: '100000000000000000000000',\r\n        }\r\n    ]\r\n    actions = await hackForWrap(actions)\r\n\r\n    const res = await window.near.signAndSendTransaction({\r\n      receiverId: wNearContractId,\r\n      actions\r\n    })\r\n\r\n    console.log('Swap NEAR to wNEAR response: ', res);\r\n  }\r\n\r\n  const sendWNear = async () => {\r\n    const res = await window.near.signAndSendTransaction({\r\n      receiverId: wNearContractId,\r\n      actions: [\r\n        {\r\n          methodName: 'ft_transfer',\r\n          args: {\r\n            receiver_id: 'amazingbeerbelly-2.testnet',\r\n            amount: '100000000000000000000000',  // wNear decimals is 24\r\n          },\r\n          deposit: '1',\r\n        }\r\n      ]\r\n    })\r\n\r\n    console.log('Send wNEAR response: ', res);\r\n  }\r\n\r\n  const swapAndSendWNearWithActions = async () => {\r\n    let actions = [\r\n      {\r\n        methodName: 'near_deposit',\r\n        args: {},\r\n        deposit: '100000000000000000000000',\r\n      },\r\n      {\r\n        methodName: 'ft_transfer',\r\n        args: {\r\n          receiver_id: 'amazingbeerbelly-2.testnet',\r\n          amount: '100000000000000000000000',\r\n        },\r\n        deposit: '1',\r\n      }\r\n    ]\r\n    actions = await hackForWrap(actions)\r\n    const transaction = {\r\n      receiverId: wNearContractId,\r\n      actions,\r\n    };\r\n\r\n    const res = await window.near.signAndSendTransaction(transaction);\r\n\r\n    console.log('Swap and Send wNEAR with multiple actions response: ', res);\r\n  }\r\n\r\n\r\n  const swapAndSendWNearWithTransactions = async () => {\r\n    let actions = [\r\n      {\r\n        methodName: 'near_deposit',\r\n        args: {},\r\n        deposit: '100000000000000000000000',\r\n      },\r\n    ]\r\n    actions = await hackForWrap(actions)\r\n    const transactions = [\r\n      {\r\n        receiverId: wNearContractId,\r\n        actions\r\n      },\r\n      {\r\n        receiverId: wNearContractId,\r\n        actions: [\r\n          {\r\n            methodName: 'ft_transfer',\r\n            args: {\r\n              receiver_id: 'amazingbeerbelly-2.testnet',\r\n              amount: '1000000000000000000',\r\n            },\r\n            deposit: '1',\r\n          }\r\n        ]\r\n      }\r\n    ];\r\n\r\n    const res = await window.near.requestSignTransactions({ transactions });\r\n\r\n    console.log('Swap and Send wNEAR with requestSignTransactions response: ', res);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {\r\n            access.secretKey ? (\r\n              <div>\r\n                <div>Connected account id: {accountId}</div>\r\n                <div>Signed access key (secretKey): {access.secretKey.slice(0, 16)}...</div>\r\n                <button style={{ marginTop: '20px' }} onClick={signOut}>Sign out</button>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <div>\r\n                  <div>Connected account id: {accountId}</div>\r\n                </div>\r\n                <button style={{ marginTop: '20px' }} onClick={signin}>Sign in</button>\r\n              </div>\r\n            )\r\n      }\r\n      \r\n      {\r\n        access.secretKey && (\r\n          <div>\r\n            <div style={{ marginTop: '20px' }}>\r\n              Using access key to make a function call:\r\n              <div style={{ marginTop: '10px' }}>\r\n                <button style={{ marginLeft: '10px' }} onClick={sayHi}>Say Hi!</button>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={{ marginTop: '20px' }}>\r\n              Make a view function call:\r\n              <div style={{ marginTop: '10px' }}>\r\n                <button style={{ marginLeft: '10px' }} onClick={getTheLastOne}>Who is the last one to Say Hi!</button>\r\n                {!!theLastOne && (\r\n                  <div style={{ marginTop: '10px' }}>\r\n                    The last one is: {theLastOne}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div style={{ marginTop: '20px' }}>\r\n              Request Use to confirm:\r\n              <div style={{ marginTop: '10px' }}>\r\n                <button style={{ marginLeft: '10px' }} onClick={sendNear}>Send NEAR</button>\r\n                <button style={{ marginLeft: '10px' }} onClick={SwapToWNear}>Swap NEAR to wNEAR</button>\r\n                <button style={{ marginLeft: '10px' }} onClick={sendWNear}>Send wNEAR</button>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={{ marginTop: '20px' }}>\r\n              Request Use to confirm (multiple actions):\r\n              <div style={{ marginTop: '10px' }}>\r\n                <button style={{ marginLeft: '10px' }} onClick={swapAndSendWNearWithActions}>Swap wNEAR and Send</button>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={{ marginTop: '20px' }}>\r\n              Request Use to confirm (multiple transactions):\r\n              <div style={{ marginTop: '10px' }}>\r\n                <button style={{ marginLeft: '10px' }} onClick={swapAndSendWNearWithTransactions}>Swap wNEAR and Send</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}